-- This exercise is about utlizing CTE's and practicing Windows Functions

-- THE CODE BELOW THIS LINE IS THE CTE -- 
WITH safety_average_cte AS (
SELECT street, AVG(safetyrating) as 'rating'
FROM citybikelanes
GROUP BY street);
-- THE CODE ABOVE THIS LINE IS THE CTE --

-- THE CODE BELOW THIS LINE IS A SQL QUERY THAT SELECTS FROM THE CTE --
SELECT 
street,
rating,
'safe lane' as 'label'
FROM safety_average_cte
WHERE rating >=4;
-- THE CODE ABOVE THIS LINE IS A SQL QUERY THAT SELECTS FROM THE CTE --

SELECT street, safetyrating,
AVG(safetyrating) OVER (PARTITION BY street) as "Average_safety_rating"
FROM CityBikeLanes;

SELECT street, safetyrating, AVG(safetyrating)
FROM CityBikeLanes
WHERE street='2nd'
GROUP BY street, safetyrating;

SELECT street, safetyrating,
AVG(safetyrating) OVER (PARTITION BY street) as "Average_safety_rating"
FROM CityBikeLanes
WHERE street= '2nd';

-- a list of all the bike lanes, both safety ratings for each lane, average rating for each lane, and a label 
    -- with the recommendation as "Remove", "Leave-As-Is", or "Improvements Needed".
        -- Bike lanes with an average safety rating of 4 or more should be labeled as "leave-as-is"
        -- Bike lanes with an average safety rating of less than 2.5 should be labeled as "removed"
        -- All other bike lanes should be labeled as "improvements needed".
        
SELECT street, safetyrating,
AVG(safetyrating) OVER (PARTITION BY street) as "Average_safety_rating",
CASE WHEN AVG(safetyrating) OVER (PARTITION BY street) >=4 THEN "Leave As-Is"
    WHEN AVG(safetyrating) OVER (PARTITION BY street) <2.5 THEN "Remove"
    ELSE "Improvements Needed"
    END AS "Recommendation"
FROM CityBikeLanes;
